// Code generated by protoc-gen-go. DO NOT EDIT.
// source: exscala.proto

// https://developers.google.com/protocol-buffers/docs/reference/go-generated

package examples

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 메세지 안에 있는 enum
// enum 타입 같은 경우는 언어 타입에 제한이 있을 수 있음.
// explains.pb.go 로 변환 될때 어떤 struct 로 변환될지 살펴봄.
type ScalaTypes_EnumAllowingAlias int32

const (
	ScalaTypes_UNKNOWN ScalaTypes_EnumAllowingAlias = 0
	ScalaTypes_STARTED ScalaTypes_EnumAllowingAlias = 1
	ScalaTypes_RUNNING ScalaTypes_EnumAllowingAlias = 1
)

var ScalaTypes_EnumAllowingAlias_name = map[int32]string{
	0: "UNKNOWN",
	1: "STARTED",
	// Duplicate value: 1: "RUNNING",
}

var ScalaTypes_EnumAllowingAlias_value = map[string]int32{
	"UNKNOWN": 0,
	"STARTED": 1,
	"RUNNING": 1,
}

func (x ScalaTypes_EnumAllowingAlias) String() string {
	return proto.EnumName(ScalaTypes_EnumAllowingAlias_name, int32(x))
}

func (ScalaTypes_EnumAllowingAlias) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9e5d3fd80b4abf73, []int{0, 0}
}

type ScalaTypes_EnumNotAllowingAlias int32

const (
	ScalaTypes_UNKNOWN_TYPE ScalaTypes_EnumNotAllowingAlias = 0
	ScalaTypes_STARTED_TYPE ScalaTypes_EnumNotAllowingAlias = 1
)

var ScalaTypes_EnumNotAllowingAlias_name = map[int32]string{
	0: "UNKNOWN_TYPE",
	1: "STARTED_TYPE",
}

var ScalaTypes_EnumNotAllowingAlias_value = map[string]int32{
	"UNKNOWN_TYPE": 0,
	"STARTED_TYPE": 1,
}

func (x ScalaTypes_EnumNotAllowingAlias) String() string {
	return proto.EnumName(ScalaTypes_EnumNotAllowingAlias_name, int32(x))
}

func (ScalaTypes_EnumNotAllowingAlias) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9e5d3fd80b4abf73, []int{0, 1}
}

// if a scalar message field is set to its default, the value will not be serialized on the wire.
// 디폴트로 세팅되어 있는 경우 엔코딩 안됨.
type ScalaTypes struct {
	DoubleVar   float64 `protobuf:"fixed64,1,opt,name=double_var,json=doubleVar,proto3" json:"double_var,omitempty"`
	FloatVar    float32 `protobuf:"fixed32,2,opt,name=float_var,json=floatVar,proto3" json:"float_var,omitempty"`
	Int32Var    int32   `protobuf:"varint,3,opt,name=int32_var,json=int32Var,proto3" json:"int32_var,omitempty"`
	Int64Var    int64   `protobuf:"varint,4,opt,name=int64_var,json=int64Var,proto3" json:"int64_var,omitempty"`
	Uint32Var   uint32  `protobuf:"varint,5,opt,name=uint32_var,json=uint32Var,proto3" json:"uint32_var,omitempty"`
	Uint64Var   uint64  `protobuf:"varint,6,opt,name=uint64_var,json=uint64Var,proto3" json:"uint64_var,omitempty"`
	Sint32Var   int32   `protobuf:"zigzag32,7,opt,name=sint32_var,json=sint32Var,proto3" json:"sint32_var,omitempty"`
	Fixed32Var  uint32  `protobuf:"fixed32,8,opt,name=fixed32_var,json=fixed32Var,proto3" json:"fixed32_var,omitempty"`
	Fixed64Var  uint64  `protobuf:"fixed64,9,opt,name=fixed64_var,json=fixed64Var,proto3" json:"fixed64_var,omitempty"`
	Sfixed32Var int32   `protobuf:"fixed32,10,opt,name=sfixed32_var,json=sfixed32Var,proto3" json:"sfixed32_var,omitempty"`
	Sfixed64Var int64   `protobuf:"fixed64,11,opt,name=sfixed64_var,json=sfixed64Var,proto3" json:"sfixed64_var,omitempty"`
	BoolVar     bool    `protobuf:"varint,12,opt,name=bool_var,json=boolVar,proto3" json:"bool_var,omitempty"`
	StringVar   string  `protobuf:"bytes,13,opt,name=string_var,json=stringVar,proto3" json:"string_var,omitempty"`
	BytesVar    []byte  `protobuf:"bytes,14,opt,name=bytes_var,json=bytesVar,proto3" json:"bytes_var,omitempty"`
	// 아래 코드가 없을때 테스트 해볼 것
	EnumAllowingAliasVar ScalaTypes_EnumAllowingAlias `protobuf:"varint,15,opt,name=EnumAllowingAlias_var,json=EnumAllowingAliasVar,proto3,enum=examples.ScalaTypes_EnumAllowingAlias" json:"EnumAllowingAlias_var,omitempty"`
	// 아래 코드가 없을때 테스트 해볼 것
	EnumNotAllowingAliasVar ScalaTypes_EnumNotAllowingAlias `protobuf:"varint,16,opt,name=EnumNotAllowingAlias_var,json=EnumNotAllowingAliasVar,proto3,enum=examples.ScalaTypes_EnumNotAllowingAlias" json:"EnumNotAllowingAlias_var,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                        `json:"-"`
	XXX_unrecognized        []byte                          `json:"-"`
	XXX_sizecache           int32                           `json:"-"`
}

func (m *ScalaTypes) Reset()         { *m = ScalaTypes{} }
func (m *ScalaTypes) String() string { return proto.CompactTextString(m) }
func (*ScalaTypes) ProtoMessage()    {}
func (*ScalaTypes) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e5d3fd80b4abf73, []int{0}
}

func (m *ScalaTypes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScalaTypes.Unmarshal(m, b)
}
func (m *ScalaTypes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScalaTypes.Marshal(b, m, deterministic)
}
func (m *ScalaTypes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScalaTypes.Merge(m, src)
}
func (m *ScalaTypes) XXX_Size() int {
	return xxx_messageInfo_ScalaTypes.Size(m)
}
func (m *ScalaTypes) XXX_DiscardUnknown() {
	xxx_messageInfo_ScalaTypes.DiscardUnknown(m)
}

var xxx_messageInfo_ScalaTypes proto.InternalMessageInfo

func (m *ScalaTypes) GetDoubleVar() float64 {
	if m != nil {
		return m.DoubleVar
	}
	return 0
}

func (m *ScalaTypes) GetFloatVar() float32 {
	if m != nil {
		return m.FloatVar
	}
	return 0
}

func (m *ScalaTypes) GetInt32Var() int32 {
	if m != nil {
		return m.Int32Var
	}
	return 0
}

func (m *ScalaTypes) GetInt64Var() int64 {
	if m != nil {
		return m.Int64Var
	}
	return 0
}

func (m *ScalaTypes) GetUint32Var() uint32 {
	if m != nil {
		return m.Uint32Var
	}
	return 0
}

func (m *ScalaTypes) GetUint64Var() uint64 {
	if m != nil {
		return m.Uint64Var
	}
	return 0
}

func (m *ScalaTypes) GetSint32Var() int32 {
	if m != nil {
		return m.Sint32Var
	}
	return 0
}

func (m *ScalaTypes) GetFixed32Var() uint32 {
	if m != nil {
		return m.Fixed32Var
	}
	return 0
}

func (m *ScalaTypes) GetFixed64Var() uint64 {
	if m != nil {
		return m.Fixed64Var
	}
	return 0
}

func (m *ScalaTypes) GetSfixed32Var() int32 {
	if m != nil {
		return m.Sfixed32Var
	}
	return 0
}

func (m *ScalaTypes) GetSfixed64Var() int64 {
	if m != nil {
		return m.Sfixed64Var
	}
	return 0
}

func (m *ScalaTypes) GetBoolVar() bool {
	if m != nil {
		return m.BoolVar
	}
	return false
}

func (m *ScalaTypes) GetStringVar() string {
	if m != nil {
		return m.StringVar
	}
	return ""
}

func (m *ScalaTypes) GetBytesVar() []byte {
	if m != nil {
		return m.BytesVar
	}
	return nil
}

func (m *ScalaTypes) GetEnumAllowingAliasVar() ScalaTypes_EnumAllowingAlias {
	if m != nil {
		return m.EnumAllowingAliasVar
	}
	return ScalaTypes_UNKNOWN
}

func (m *ScalaTypes) GetEnumNotAllowingAliasVar() ScalaTypes_EnumNotAllowingAlias {
	if m != nil {
		return m.EnumNotAllowingAliasVar
	}
	return ScalaTypes_UNKNOWN_TYPE
}

func init() {
	proto.RegisterEnum("examples.ScalaTypes_EnumAllowingAlias", ScalaTypes_EnumAllowingAlias_name, ScalaTypes_EnumAllowingAlias_value)
	proto.RegisterEnum("examples.ScalaTypes_EnumNotAllowingAlias", ScalaTypes_EnumNotAllowingAlias_name, ScalaTypes_EnumNotAllowingAlias_value)
	proto.RegisterType((*ScalaTypes)(nil), "examples.ScalaTypes")
}

func init() { proto.RegisterFile("exscala.proto", fileDescriptor_9e5d3fd80b4abf73) }

var fileDescriptor_9e5d3fd80b4abf73 = []byte{
	// 449 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x93, 0x41, 0x6f, 0xd3, 0x30,
	0x18, 0x86, 0xf7, 0x75, 0x6b, 0x9b, 0x7c, 0x6d, 0xb7, 0x2c, 0x2a, 0x62, 0x80, 0x26, 0x4c, 0x0f,
	0xc8, 0x5c, 0x72, 0xd8, 0xc6, 0x0e, 0x1c, 0x90, 0x3a, 0x51, 0x21, 0x84, 0x14, 0x90, 0xd7, 0x0d,
	0x01, 0x87, 0xc9, 0x59, 0xbd, 0x2e, 0x92, 0x1b, 0x57, 0x71, 0x02, 0xed, 0x5f, 0xe2, 0x3f, 0x22,
	0x21, 0x3b, 0x6e, 0x5a, 0xd1, 0xed, 0x66, 0xbf, 0xcf, 0xf7, 0x3e, 0x56, 0x62, 0x19, 0x7b, 0x62,
	0xa1, 0x6f, 0xb9, 0xe4, 0xd1, 0x3c, 0x57, 0x85, 0x0a, 0x3d, 0xb1, 0xe0, 0xb3, 0xb9, 0x14, 0x7a,
	0xf0, 0xb7, 0x89, 0x78, 0x69, 0xc8, 0x78, 0x39, 0x17, 0x3a, 0x3c, 0x46, 0x9c, 0xa8, 0x32, 0x91,
	0xe2, 0xe6, 0x17, 0xcf, 0x8f, 0x80, 0x00, 0x05, 0xe6, 0x57, 0xc9, 0x35, 0xcf, 0xc3, 0x17, 0xe8,
	0xdf, 0x49, 0xc5, 0x0b, 0x4b, 0x1b, 0x04, 0x68, 0x83, 0x79, 0x36, 0x70, 0x30, 0xcd, 0x8a, 0xd3,
	0x13, 0x0b, 0x77, 0x09, 0xd0, 0x26, 0xf3, 0x6c, 0xb0, 0x86, 0xe7, 0x67, 0x16, 0xee, 0x11, 0xa0,
	0xbb, 0x16, 0x9e, 0x9f, 0x19, 0x78, 0x8c, 0x58, 0xae, 0xab, 0x4d, 0x02, 0xb4, 0xc7, 0xfc, 0xb2,
	0xee, 0x3a, 0xec, 0xca, 0x2d, 0x02, 0x74, 0xaf, 0xc2, 0x75, 0x5b, 0xaf, 0xdb, 0x6d, 0x02, 0xf4,
	0x90, 0xf9, 0xba, 0x6e, 0xbf, 0xc4, 0xce, 0x5d, 0xba, 0x10, 0x13, 0xc7, 0x3d, 0x02, 0xb4, 0xcd,
	0xd0, 0x45, 0x9b, 0x03, 0xce, 0xef, 0x13, 0xa0, 0x2d, 0x37, 0x50, 0x1d, 0xf0, 0x0a, 0xbb, 0x7a,
	0x53, 0x81, 0x04, 0xe8, 0x01, 0xeb, 0xe8, 0x0d, 0x47, 0x3d, 0xe2, 0x24, 0x1d, 0x02, 0x34, 0x58,
	0x8d, 0x54, 0x96, 0x67, 0xe8, 0x25, 0x4a, 0x49, 0x8b, 0xbb, 0x04, 0xa8, 0xc7, 0xda, 0x66, 0xbf,
	0xfa, 0x82, 0x22, 0x4f, 0xb3, 0xa9, 0x85, 0x3d, 0x02, 0xd4, 0x67, 0x7e, 0x95, 0xb8, 0x7f, 0x97,
	0x2c, 0x0b, 0xa1, 0x2d, 0xdd, 0x27, 0x40, 0xbb, 0xcc, 0xb3, 0x81, 0x81, 0x3f, 0xf1, 0xc9, 0x28,
	0x2b, 0x67, 0x43, 0x29, 0xd5, 0xef, 0x34, 0x9b, 0x0e, 0x65, 0xca, 0xab, 0xc1, 0x03, 0x02, 0x74,
	0xff, 0xe4, 0x75, 0xb4, 0xba, 0xea, 0x68, 0x7d, 0xcd, 0xd1, 0x56, 0x83, 0xf5, 0xb7, 0x22, 0x23,
	0x9f, 0xe0, 0x91, 0xc9, 0x63, 0x55, 0x6c, 0xfb, 0x03, 0xeb, 0x7f, 0xf3, 0xa8, 0xff, 0xff, 0x12,
	0x7b, 0xfa, 0x50, 0x7a, 0xcd, 0xf3, 0xc1, 0x7b, 0x3c, 0xdc, 0x3a, 0x3d, 0xec, 0x60, 0xfb, 0x2a,
	0xfe, 0x1c, 0x7f, 0xf9, 0x16, 0x07, 0x3b, 0x66, 0x73, 0x39, 0x1e, 0xb2, 0xf1, 0xe8, 0x43, 0x00,
	0x66, 0xc3, 0xae, 0xe2, 0xf8, 0x53, 0xfc, 0x31, 0x80, 0xe7, 0x8d, 0x00, 0x06, 0xef, 0xb0, 0xff,
	0x90, 0x3a, 0x0c, 0xb0, 0xeb, 0x14, 0x37, 0xe3, 0xef, 0x5f, 0x47, 0xc1, 0x8e, 0x49, 0x9c, 0xa7,
	0x4a, 0xe0, 0xe2, 0x2d, 0xf6, 0x6f, 0xd5, 0x2c, 0x9a, 0xa6, 0xc5, 0x7d, 0x99, 0x44, 0x5a, 0xa8,
	0xe5, 0x3d, 0x17, 0x69, 0x76, 0x51, 0xbf, 0x90, 0x1f, 0xf5, 0xea, 0x4f, 0xa3, 0x5e, 0x26, 0x2d,
	0xfb, 0x8e, 0x4e, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0xb2, 0x85, 0x6a, 0x3b, 0x58, 0x03, 0x00,
	0x00,
}
